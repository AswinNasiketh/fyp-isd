def get_instr_addr(trace_line):
    return str(int(trace_line.split()[0].split('=')[1], 16))


#class to orgainise trace lines into assembly opcodes and operands
#branch profiler does not use this because it uses metadata generated by the simulator in the trace files
class TraceLine:
    
    def __init__(self, trace_line):
        fields = trace_line.split()

        self.opcode = fields[1]
        self.operands = fields[2].split(',')

        